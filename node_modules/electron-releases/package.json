{
  "_args": [
    [
      {
        "raw": "electron-releases@^2.1.0",
        "scope": null,
        "escapedName": "electron-releases",
        "name": "electron-releases",
        "rawSpec": "^2.1.0",
        "spec": ">=2.1.0 <3.0.0",
        "type": "range"
      },
      "/Users/chanwookim/Documents/modules/aliyun-gzip/node_modules/electron-to-chromium"
    ]
  ],
  "_from": "electron-releases@>=2.1.0 <3.0.0",
  "_id": "electron-releases@2.1.0",
  "_inCache": true,
  "_location": "/electron-releases",
  "_nodeVersion": "8.9.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/electron-releases-2.1.0.tgz_1513798574290_0.7275502518750727"
  },
  "_npmUser": {
    "name": "electron",
    "email": "electron@github.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "electron-releases@^2.1.0",
    "scope": null,
    "escapedName": "electron-releases",
    "name": "electron-releases",
    "rawSpec": "^2.1.0",
    "spec": ">=2.1.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/electron-to-chromium"
  ],
  "_resolved": "https://registry.npmjs.org/electron-releases/-/electron-releases-2.1.0.tgz",
  "_shasum": "c5614bf811f176ce3c836e368a0625782341fd4e",
  "_shrinkwrap": null,
  "_spec": "electron-releases@^2.1.0",
  "_where": "/Users/chanwookim/Documents/modules/aliyun-gzip/node_modules/electron-to-chromium",
  "bugs": {
    "url": "https://github.com/electron/electron-releases/issues"
  },
  "dependencies": {},
  "description": "Complete and up-to-date info about every release of Electron",
  "devDependencies": {
    "chai": "^4.1.2",
    "check-for-leaks": "^1.2.0",
    "dotenv-safe": "^4.0.4",
    "flat": "^4.0.0",
    "github": "^13.0.1",
    "got": "^8.0.1",
    "hubdown": "^2.0.0",
    "lodash": "^4.17.4",
    "make-promises-safe": "^1.1.0",
    "mocha": "^4.0.1",
    "npm": "^5.6.0",
    "parse-link-header": "^1.0.1",
    "platform-utils": "^1.0.0",
    "semver": "^5.4.1",
    "standard": "^10.0.3",
    "standard-markdown": "^4.0.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-cyKFD1bTE/UgULXfaueIN1k5EPFzs+FRc/rvCY5tIynefAPqopQEgjr0EzY+U3Dqrk/G4m9tXSPuZ77v6dL/Rw==",
    "shasum": "c5614bf811f176ce3c836e368a0625782341fd4e",
    "tarball": "https://registry.npmjs.org/electron-releases/-/electron-releases-2.1.0.tgz"
  },
  "gitHead": "fd41ff4b03000d8be89836d1efc5cefb271931a2",
  "homepage": "https://github.com/electron/electron-releases#readme",
  "license": "MIT",
  "main": "index.json",
  "maintainers": [
    {
      "name": "electron",
      "email": "electron@github.com"
    }
  ],
  "name": "electron-releases",
  "optionalDependencies": {},
  "readme": "# electron-releases \n\n> Complete and up-to-date info about every release of Electron.\n\nThis package:\n\n- includes all [GitHub Releases](https://developer.github.com/v3/repos/releases/#get-a-single-release) data about Electron.\n- does not include draft releases.\n- includes prereleases which are not published to npm.\n- tracks which versions are published to npm.\n- tracks [npm dist-tags](https://docs.npmjs.com/cli/dist-tag) like `latest` and `beta`.\n- includes V8, Chromium, and Node.js version data.\n- includes [GitHub-flavored HTML](https://ghub.io/hubdown) for each release's changelog.\n- ignores npm versions from the days before [Electron was `electron`](https://electronjs.org/blog/npm-install-electron).\n- is [updated regularly](#updates).\n\n## Installation\n\n```sh\nnpm i electron-releases\n```\n\n## Usage\n\nThe module exports an array of release objects:\n\n```js\nconst releases = require('electron-releases')\n\n// find newest version:\nreleases[0].tag_name // => 'v1.8.2-beta.3'\n\n// find `latest` on npm, which is not necessarily the most recent release:\nreleases.find(release => release.npm_dist_tag === 'latest')\n\n// find `beta` on npm:\nreleases.find(release => release.npm_dist_tag === 'beta')\n```\n\n### Data\n\nEach release contains all the data returned by the \n[GitHub Releases API](https://developer.github.com/v3/repos/releases/#get-a-single-release), \nplus some extra properties:\n\n- `version` (String) - the same thing as `dist_tag`, but without the `v` for convenient [semver comparisons](https://github.com/npm/node-semver#usage).\n- `npm_dist_tag` (String) - an [npm dist-tag](https://docs.npmjs.com/cli/dist-tag) like `latest` or `beta`. Most releases will not have this property.\n- `npm_package_name` (String) - For packages published to npm, this will be `electron` or `electron-prebuilt`. For packages not published to npm, this property will not exist.\n- `total_downloads` (Number) - Total downloads of all assets in the release that \n  have a [detectable platform](https://github.com/zeke/platform-utils#api) in their\n  filename like `.zip`, `.dmg`, `.exe`, `.rpm`, `.deb`, etc.\n- `deps` (Object) - version numbers for Electron dependencies.\n  - `v8` (String)\n  - `chromium` (String)\n  - `node` (String)\n  - etc..\n\n## Updates\n\nThis module is self-publishing. It runs in a \n[Heroku Scheduler](https://devcenter.heroku.com/articles/scheduler) \nprocess every ten minutes. A new version of this module is published if any of \nthe following change:\n\n- number of Electron releases on GitHub\n- number of Electron releases on npm\n- npm `electron@beta` version\n- npm `electron@latest` version\n\nIf none of these has changed, the build process aborts and runs again ten minutes\nlater. For more detail, see [script/release.sh](script/release.sh)\n\nThe Heroku app is also synced to the GitHub repo, so every push to the\n`master` branch will automatically deploy a new version of this app.\n\n## Tests\n\n```sh\nnpm install\nnpm test\n```\n\n## Dependencies\n\nNone\n\n## Dev Dependencies\n\n- [chai](https://github.com/chaijs/chai): BDD/TDD assertion library for node.js and the browser. Test framework agnostic.\n- [check-for-leaks](): avoid publishing secrets to git and npm\n- [dotenv-safe](https://github.com/rolodato/dotenv-safe): Load environment variables from .env and ensure they are defined\n- [github](): NodeJS wrapper for the GitHub API\n- [got](): Simplified HTTP requests\n- [hubdown](): Convert markdown to GitHub-style HTML using a common set of remark plugins\n- [lodash](): Lodash modular utilities.\n- [mocha](https://github.com/mochajs/mocha): simple, flexible, fun test framework\n- [npm](https://github.com/npm/npm): a package manager for JavaScript\n- [parse-link-header](https://github.com/thlorenz/parse-link-header): Parses a link header and returns paging information for each contained link.\n- [semver](): The semantic version parser used by npm.\n- [standard](https://github.com/standard/standard): JavaScript Standard Style\n- [standard-markdown](): Test your Markdown files for Standard JavaScript Styleâ„¢\n\n\n## License\n\nMIT\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/electron/electron-releases.git"
  },
  "scripts": {
    "build": "node script/build.js",
    "prepack": "check-for-leaks",
    "prepush": "check-for-leaks",
    "release": "./script/release.sh",
    "test": "mocha && standard --fix && standard-markdown"
  },
  "version": "2.1.0"
}
